import { db } from './db.js';
import { sql } from 'drizzle-orm';

async function addSampleActivities() {
  console.log('üå± Criando propostas de or√ßamento para todas as atividades...');

  try {
    // 1. Verificar se a tabela activity_budget_proposals existe e criar se necess√°rio
    console.log('üîß Verificando/criando estrutura de propostas...');
    
    await db.execute(sql`
      CREATE TABLE IF NOT EXISTS activity_budget_proposals (
        id INT AUTO_INCREMENT PRIMARY KEY,
        activity_id INT NOT NULL,
        created_by INT DEFAULT NULL,
        title VARCHAR(255) NOT NULL,
        description TEXT,
        price_type VARCHAR(50) DEFAULT 'per_person' NOT NULL,
        amount DECIMAL(10,2),
        currency VARCHAR(10) DEFAULT 'BRL' NOT NULL,
        inclusions JSON,
        exclusions JSON,
        valid_until TIMESTAMP NULL,
        is_active BOOLEAN DEFAULT TRUE NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
        FOREIGN KEY (activity_id) REFERENCES activities(id) ON DELETE CASCADE
      )
    `);

    console.log('‚úÖ Estrutura da tabela verificada');

    // 2. Limpar propostas existentes e criar novas
    await db.execute(sql`DELETE FROM activity_budget_proposals`);
    console.log('üßπ Propostas existentes removidas');

    // 3. Obter atividades ativas
    const activities = await db.execute(sql`
      SELECT id, title, location FROM activities 
      WHERE is_active = TRUE AND title IS NOT NULL 
      ORDER BY id
    `);
    
    console.log(`üìä Encontradas ${activities.length} atividades para criar propostas`);

    // 4. Criar propostas espec√≠ficas para atividades conhecidas
    const proposalsByActivity = {
      'Cristo Redentor / Corcovado': [
        {
          title: 'Van Oficial',
          description: 'Transporte em van oficial at√© o Cristo Redentor com entrada inclu√≠da',
          amount: 85.00,
          inclusions: ['Transporte em van oficial', 'Entrada para o monumento', 'Seguro de viagem'],
          exclusions: ['Alimenta√ß√£o', 'Bebidas', 'Compras pessoais']
        },
        {
          title: 'Trem do Corcovado',
          description: 'Experi√™ncia completa com trem hist√≥rico e guia especializado',
          amount: 160.00,
          inclusions: ['Trem do Corcovado ida e volta', 'Entrada para o monumento', 'Guia tur√≠stico', 'Material informativo'],
          exclusions: ['Bebidas alco√≥licas', 'Compras pessoais']
        },
        {
          title: 'Tour Premium VIP',
          description: 'Tour privativo com transporte executivo e fotografia profissional',
          amount: 320.00,
          inclusions: ['Transporte privativo executivo', 'Guia exclusivo bil√≠ngue', 'Entrada VIP', 'Sess√£o de fotos profissional'],
          exclusions: ['Compras pessoais']
        }
      ],
      'P√£o de A√ß√∫car (Bondinho)': [
        {
          title: 'Ingresso Padr√£o',
          description: 'Bondinho ida e volta com acesso aos dois morros',
          amount: 120.00,
          inclusions: ['Bondinho ida e volta', 'Acesso aos mirantes', 'Mapa tur√≠stico'],
          exclusions: ['Alimenta√ß√£o', 'Bebidas', 'Fotos profissionais']
        },
        {
          title: 'Experi√™ncia Guiada',
          description: 'Bondinho com guia especializado e material educativo',
          amount: 190.00,
          inclusions: ['Bondinho ida e volta', 'Guia tur√≠stico especializado', 'Material informativo', 'Bin√≥culo'],
          exclusions: ['Bebidas alco√≥licas', 'Fotos profissionais']
        },
        {
          title: 'Experi√™ncia Completa',
          description: 'Bondinho + voo panor√¢mico de helic√≥ptero + jantar',
          amount: 650.00,
          inclusions: ['Bondinho ida e volta', 'Voo de helic√≥ptero 15 min', 'Jantar com vista panor√¢mica', 'Fotos a√©reas'],
          exclusions: ['Compras pessoais', 'Bebidas premium']
        }
      ],
      'Praia de Copacabana / Ipanema + Esportes': [
        {
          title: 'Aula de Surf B√°sica',
          description: 'Aula de surf com instrutor certificado na praia',
          amount: 100.00,
          inclusions: ['Aula de surf 2h', 'Prancha', 'Lycra', 'Instrutor certificado'],
          exclusions: ['Transporte', 'Alimenta√ß√£o', 'Bebidas']
        },
        {
          title: 'Dia Completo de Esportes',
          description: 'Surf + v√¥lei de praia + bike tour pela orla',
          amount: 180.00,
          inclusions: ['Aula de surf', 'V√¥lei de praia', 'Bike tour 2h', 'Todos os equipamentos', 'Instrutor'],
          exclusions: ['Refei√ß√µes', 'Bebidas alco√≥licas']
        },
        {
          title: 'Experi√™ncia Premium',
          description: 'Aulas privadas + almo√ßo frente ao mar + massagem relaxante',
          amount: 350.00,
          inclusions: ['Aulas privadas personalizadas', 'Almo√ßo frente ao mar', 'Massagem relaxante 30min', 'Bebidas inclu√≠das'],
          exclusions: ['Compras pessoais', 'Gorjetas']
        }
      ],
      'MASP + Avenida Paulista': [
        {
          title: 'Entrada Livre',
          description: 'Visita livre ao MASP com mapa autoguiado',
          amount: 40.00,
          inclusions: ['Entrada do MASP', 'Mapa autoguiado', 'Guarda-volumes'],
          exclusions: ['Guia tur√≠stico', 'Audioguia', 'Transporte']
        },
        {
          title: 'Tour Cultural Guiado',
          description: 'MASP + Paulista com guia especializado em arte',
          amount: 75.00,
          inclusions: ['Entrada do MASP', 'Guia especializado em arte', 'Tour pela Avenida Paulista', 'Material educativo'],
          exclusions: ['Transporte', 'Alimenta√ß√£o']
        },
        {
          title: 'Experi√™ncia Cultural Completa',
          description: 'MASP + Paulista + Pinacoteca com almo√ßo cultural',
          amount: 120.00,
          inclusions: ['MASP', 'Avenida Paulista', 'Pinacoteca do Estado', 'Guia especializado', 'Almo√ßo cultural', 'Transporte'],
          exclusions: ['Compras pessoais', 'Bebidas extras']
        }
      ],
      'Pelourinho + Elevador Lacerda': [
        {
          title: 'Caminhada Hist√≥rica',
          description: 'Tour a p√© pelo centro hist√≥rico de Salvador',
          amount: 60.00,
          inclusions: ['Tour guiado 3h', 'Elevador Lacerda', 'Entrada igrejas principais', 'Material informativo'],
          exclusions: ['Alimenta√ß√£o', 'Bebidas', 'Compras']
        },
        {
          title: 'Experi√™ncia Cultural',
          description: 'Tour hist√≥rico + show de capoeira + degusta√ß√£o t√≠pica',
          amount: 120.00,
          inclusions: ['Tour guiado completo', 'Show de capoeira', 'Degusta√ß√£o de comidas t√≠picas', 'Aula b√°sica de capoeira'],
          exclusions: ['Bebidas alco√≥licas', 'Compras pessoais']
        },
        {
          title: 'Viv√™ncia Completa',
          description: 'Tour + oficinas + almo√ßo t√≠pico + apresenta√ß√£o folcl√≥rica',
          amount: 200.00,
          inclusions: ['Tour hist√≥rico completo', 'Oficina de artesanato', 'Almo√ßo baiano completo', 'Apresenta√ß√£o folcl√≥rica', 'Aula de samba de roda'],
          exclusions: ['Compras pessoais', 'Gorjetas']
        }
      ],
      'Cataratas do Igua√ßu (lado brasileiro)': [
        {
          title: 'Entrada B√°sica do Parque',
          description: 'Acesso ao parque com trilha panor√¢mica principal',
          amount: 85.00,
          inclusions: ['Entrada do Parque Nacional', 'Trilha panor√¢mica', '√înibus interno', 'Mapa do parque'],
          exclusions: ['Transporte at√© o parque', 'Alimenta√ß√£o', 'Atividades extras']
        },
        {
          title: 'Tour Completo Guiado',
          description: 'Parque + transporte + guia especializado + equipamentos',
          amount: 150.00,
          inclusions: ['Entrada do parque', 'Transporte ida/volta', 'Guia especializado', 'Capa de chuva', 'Bin√≥culo'],
          exclusions: ['Refei√ß√µes', 'Bebidas', 'Souvenirs']
        },
        {
          title: 'Experi√™ncia Premium A√©rea',
          description: 'Tour completo + voo panor√¢mico de helic√≥ptero + almo√ßo',
          amount: 450.00,
          inclusions: ['Tour completo terrestre', 'Voo de helic√≥ptero 10min', 'Almo√ßo com vista', 'Fotos a√©reas profissionais', 'Transfer executivo'],
          exclusions: ['Compras pessoais', 'Bebidas premium']
        }
      ]
    };

    // 5. Criar propostas para cada atividade
    for (const activity of activities) {
      console.log(`üí° Criando propostas para: ${activity.title}`);
      
      let proposals = proposalsByActivity[activity.title];
      
      // Se n√£o tem propostas espec√≠ficas, criar propostas gen√©ricas
      if (!proposals) {
        const basePrice = Math.floor(Math.random() * 80) + 50; // Entre 50-130
        proposals = [
          {
            title: 'Op√ß√£o B√°sica',
            description: 'Experi√™ncia padr√£o da atividade com o essencial',
            amount: basePrice,
            inclusions: ['Atividade principal', 'Equipamentos b√°sicos', 'Seguro b√°sico'],
            exclusions: ['Alimenta√ß√£o', 'Bebidas', 'Transporte']
          },
          {
            title: 'Op√ß√£o Completa',
            description: 'Experi√™ncia com guia especializado e comodidades extras',
            amount: Math.floor(basePrice * 1.8),
            inclusions: ['Atividade principal', 'Guia especializado', 'Equipamentos completos', 'Lanche', 'Material informativo'],
            exclusions: ['Bebidas alco√≥licas', 'Compras pessoais']
          },
          {
            title: 'Op√ß√£o Premium',
            description: 'Experi√™ncia exclusiva e totalmente personalizada',
            amount: Math.floor(basePrice * 3.2),
            inclusions: ['Experi√™ncia privativa', 'Guia exclusivo', 'Transporte inclu√≠do', 'Refei√ß√£o completa', 'Fotografia profissional'],
            exclusions: ['Compras pessoais', 'Gorjetas']
          }
        ];
      }
      
      // Inserir propostas na base de dados
      for (const proposal of proposals) {
        await db.execute(sql`
          INSERT INTO activity_budget_proposals 
          (activity_id, title, description, amount, currency, inclusions, exclusions, price_type, is_active) 
          VALUES 
          (${activity.id}, ${proposal.title}, ${proposal.description}, ${proposal.amount}, 'BRL', 
           ${JSON.stringify(proposal.inclusions)}, ${JSON.stringify(proposal.exclusions)}, 'per_person', true)
        `);
      }
    }

    // 6. Verificar resultados
    const totalProposals = await db.execute(sql`SELECT COUNT(*) as count FROM activity_budget_proposals`);
    console.log(`‚úÖ ${totalProposals[0].count} propostas de or√ßamento criadas com sucesso!`);

    // 7. Mostrar algumas propostas criadas
    const sampleProposals = await db.execute(sql`
      SELECT abp.title, abp.amount, a.title as activity_title 
      FROM activity_budget_proposals abp 
      JOIN activities a ON abp.activity_id = a.id 
      LIMIT 5
    `);
    
    console.log('\nüìã Exemplos de propostas criadas:');
    sampleProposals.forEach(p => {
      console.log(`   ${p.activity_title}: ${p.title} - R$ ${p.amount}`);
    });

    console.log('\nüéâ Sistema de propostas de or√ßamento completamente implementado!');

  } catch (error) {
    console.error('‚ùå Erro ao criar propostas:', error);
    throw error;
  }
}

// Executar se chamado diretamente
if (import.meta.url === `file://${process.argv[1]}`) {
  addSampleActivities()
    .then(() => {
      console.log('‚úÖ Processo conclu√≠do!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Erro no processo:', error);
      process.exit(1);
    });
}