import { db } from './db.js';
import { sql } from 'drizzle-orm';

async function createBudgetProposals() {
  console.log('üå± Criando sistema completo: propostas de or√ßamento + avalia√ß√µes...');

  try {
    // 1. Remover tabelas antigas se existirem
    await db.execute(sql`DROP TABLE IF EXISTS activity_budget_proposals`);
    await db.execute(sql`DROP TABLE IF EXISTS activity_reviews`);
    console.log('üßπ Tabelas antigas removidas');

    // 2. Criar tabelas sem constraints problem√°ticas
    console.log('üîß Criando estrutura das tabelas...');
    
    await db.execute(sql`
      CREATE TABLE activity_budget_proposals (
        id INT AUTO_INCREMENT PRIMARY KEY,
        activity_id INT NOT NULL,
        title VARCHAR(255) NOT NULL,
        description TEXT,
        price_type VARCHAR(50) DEFAULT 'per_person' NOT NULL,
        amount DECIMAL(10,2),
        currency VARCHAR(10) DEFAULT 'BRL' NOT NULL,
        inclusions TEXT,
        exclusions TEXT,
        is_active BOOLEAN DEFAULT TRUE NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
        INDEX (activity_id)
      )
    `);

    await db.execute(sql`
      CREATE TABLE activity_reviews (
        id INT AUTO_INCREMENT PRIMARY KEY,
        activity_id INT NOT NULL,
        user_id INT DEFAULT 1,
        rating INT NOT NULL CHECK (rating >= 1 AND rating <= 5),
        comment TEXT,
        visit_date DATE,
        is_verified BOOLEAN DEFAULT TRUE NOT NULL,
        helpful_votes INT DEFAULT 0 NOT NULL,
        is_hidden BOOLEAN DEFAULT FALSE NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
        INDEX (activity_id)
      )
    `);

    console.log('‚úÖ Estrutura das tabelas criada');

    // 3. Inserir propostas de or√ßamento direto via SQL
    console.log('üí∞ Criando propostas de or√ßamento...');
    
    const proposalsSQL = `
      INSERT INTO activity_budget_proposals 
      (activity_id, title, description, amount, currency, inclusions, exclusions, price_type, is_active) 
      VALUES 
      (1, 'B√°sico', 'Passeio b√°sico de catamaran', 95.00, 'BRL', 'Passeio de catamaran, Equipamentos', 'Alimenta√ß√£o, Bebidas', 'per_person', true),
      (1, 'Completo', 'Passeio com almo√ßo e bebidas', 170.00, 'BRL', 'Passeio, Almo√ßo, Bebidas', 'Compras pessoais', 'per_person', true),
      (1, 'Premium', 'Passeio privativo com chef', 304.00, 'BRL', 'Passeio privativo, Chef, Bebidas premium', 'Gorjetas', 'per_person', true),
      
      (2, 'B√°sico', 'Trilha b√°sica com guia', 70.00, 'BRL', 'Guia, Equipamentos b√°sicos', 'Alimenta√ß√£o, Transporte', 'per_person', true),
      (2, 'Completo', 'Trilha com refei√ß√µes e transporte', 126.00, 'BRL', 'Guia, Refei√ß√µes, Transporte', 'Equipamentos especiais', 'per_person', true),
      (2, 'Premium', 'Trilha VIP com acampamento', 224.00, 'BRL', 'Guia privativo, Acampamento, Todas as refei√ß√µes', 'Compras pessoais', 'per_person', true),
      
      (9, 'Van Oficial', 'Transporte em van oficial', 85.00, 'BRL', 'Van oficial, Entrada', 'Alimenta√ß√£o, Bebidas', 'per_person', true),
      (9, 'Trem do Corcovado', 'Trem + guia tur√≠stico', 160.00, 'BRL', 'Trem, Guia, Entrada', 'Bebidas alco√≥licas', 'per_person', true),
      (9, 'Tour Premium', 'Tour privativo VIP', 320.00, 'BRL', 'Transporte privativo, Guia exclusivo, Fotos', 'Compras pessoais', 'per_person', true),
      
      (10, 'Ingresso Padr√£o', 'Bondinho ida e volta', 120.00, 'BRL', 'Bondinho, Mirantes', 'Alimenta√ß√£o, Fotos', 'per_person', true),
      (10, 'Com Guia', 'Bondinho com guia especializado', 190.00, 'BRL', 'Bondinho, Guia, Material', 'Fotos profissionais', 'per_person', true),
      (10, 'Experi√™ncia VIP', 'Bondinho + helic√≥ptero + jantar', 650.00, 'BRL', 'Bondinho, Helic√≥ptero, Jantar', 'Compras pessoais', 'per_person', true),
      
      (11, 'Aula de Surf', 'Aula b√°sica com instrutor', 100.00, 'BRL', 'Aula surf, Prancha, Instrutor', 'Transporte, Alimenta√ß√£o', 'per_person', true),
      (11, 'Dia Completo', 'Surf + v√¥lei + bike tour', 180.00, 'BRL', 'Surf, V√¥lei, Bike tour', 'Refei√ß√µes', 'per_person', true),
      (11, 'Premium', 'Aulas privadas + spa', 350.00, 'BRL', 'Aulas privadas, Spa, Almo√ßo', 'Gorjetas', 'per_person', true),
      
      (12, 'Entrada Livre', 'Visita livre ao museu', 40.00, 'BRL', 'Entrada MASP', 'Guia, Transporte', 'per_person', true),
      (12, 'Tour Guiado', 'MASP + Paulista com guia', 75.00, 'BRL', 'MASP, Guia, Paulista', 'Transporte', 'per_person', true),
      (12, 'Cultural Completo', 'MASP + Pinacoteca + almo√ßo', 120.00, 'BRL', 'MASP, Pinacoteca, Almo√ßo, Transporte', 'Compras', 'per_person', true),
      
      (13, 'Caminhada Hist√≥rica', 'Tour a p√© pelo centro', 60.00, 'BRL', 'Tour, Elevador Lacerda', 'Alimenta√ß√£o, Bebidas', 'per_person', true),
      (13, 'Cultural', 'Tour + capoeira + degusta√ß√£o', 120.00, 'BRL', 'Tour, Capoeira, Degusta√ß√£o', 'Compras', 'per_person', true),
      (13, 'Viv√™ncia Completa', 'Tour + oficinas + almo√ßo', 200.00, 'BRL', 'Tour completo, Oficinas, Almo√ßo baiano', 'Gorjetas', 'per_person', true),
      
      (14, 'Entrada B√°sica', 'Acesso ao parque', 85.00, 'BRL', 'Entrada parque, Trilha', 'Transporte, Alimenta√ß√£o', 'per_person', true),
      (14, 'Tour Completo', 'Parque + transporte + guia', 150.00, 'BRL', 'Entrada, Transporte, Guia', 'Refei√ß√µes', 'per_person', true),
      (14, 'Premium A√©reo', 'Tour + helic√≥ptero + almo√ßo', 450.00, 'BRL', 'Tour completo, Helic√≥ptero, Almo√ßo', 'Compras pessoais', 'per_person', true)
    `;

    await db.execute(sql.raw(proposalsSQL));
    console.log('‚úÖ Propostas de or√ßamento criadas!');

    // 4. Inserir avalia√ß√µes
    console.log('‚≠ê Criando avalia√ß√µes...');
    
    const reviewsSQL = `
      INSERT INTO activity_reviews 
      (activity_id, user_id, rating, comment, visit_date, is_verified, helpful_votes, is_hidden) 
      VALUES 
      (9, 1, 5, 'Vista incr√≠vel! O Cristo Redentor √© realmente majestoso. Vale muito a pena!', '2024-12-01', true, 15, false),
      (9, 2, 4, 'Muito bonito, mas estava bem cheio. Recomendo ir cedo pela manh√£.', '2024-11-28', true, 8, false),
      
      (10, 1, 5, 'O bondinho √© uma experi√™ncia √∫nica! Vista espetacular da cidade.', '2024-12-05', true, 12, false),
      (10, 2, 4, 'Vista maravilhosa, mas achei um pouco caro. Ainda assim recomendo!', '2024-11-30', true, 6, false),
      
      (14, 1, 5, 'Uma das experi√™ncias mais impressionantes da minha vida! As cataratas s√£o majestosas.', '2024-11-15', true, 22, false),
      (14, 2, 5, 'Espetacular! Prepare-se para se molhar e leve capa de chuva. Vale cada centavo!', '2024-11-20', true, 18, false),
      
      (12, 1, 4, 'Excelente museu com obras incr√≠veis. O acervo √© muito rico e diversificado.', '2024-12-03', true, 9, false),
      (12, 2, 4, 'Muito interessante para quem gosta de arte. A arquitetura do pr√©dio tamb√©m √© impressionante.', '2024-11-25', true, 7, false),
      
      (13, 1, 5, 'O centro hist√≥rico de Salvador √© maravilhoso! Rica cultura e hist√≥ria em cada esquina.', '2024-11-18', true, 14, false),
      (13, 2, 4, 'Muito bonito e cheio de hist√≥ria. O show de capoeira foi o ponto alto!', '2024-11-22', true, 10, false),
      
      (1, 1, 5, 'Passeio incr√≠vel em B√∫zios! Mar cristalino e paisagens deslumbrantes.', '2024-11-10', true, 8, false),
      (2, 1, 4, 'Trilha desafiadora mas recompensadora. Vista do topo √© espetacular!', '2024-10-25', true, 6, false),
      (11, 1, 5, 'Aula de surf fant√°stica! Instrutor muito paciente e experiente.', '2024-12-08', true, 11, false)
    `;

    await db.execute(sql.raw(reviewsSQL));
    console.log('‚úÖ Avalia√ß√µes criadas!');

    // 5. Atualizar m√©dias de rating
    console.log('üìä Atualizando m√©dias de rating...');
    await db.execute(sql`
      UPDATE activities a
      SET 
        average_rating = COALESCE((
          SELECT AVG(r.rating)
          FROM activity_reviews r 
          WHERE r.activity_id = a.id AND r.is_hidden = FALSE
        ), 0),
        total_ratings = COALESCE((
          SELECT COUNT(*)
          FROM activity_reviews r 
          WHERE r.activity_id = a.id AND r.is_hidden = FALSE
        ), 0)
    `);

    // 6. Verificar resultados finais
    const proposalsCount = await db.execute(sql`SELECT COUNT(*) as count FROM activity_budget_proposals`);
    const reviewsCount = await db.execute(sql`SELECT COUNT(*) as count FROM activity_reviews`);
    
    console.log(`\nüìã Resultado final:`);
    console.log(`üí∞ Propostas criadas: ${proposalsCount[0].count}`);
    console.log(`‚≠ê Avalia√ß√µes criadas: ${reviewsCount[0].count}`);

    // 7. Testar alguns dados
    const sampleProposals = await db.execute(sql`
      SELECT a.title as activity_title, p.title, p.amount 
      FROM activity_budget_proposals p 
      JOIN activities a ON p.activity_id = a.id 
      LIMIT 5
    `);
    
    console.log(`\nüí° Exemplos de propostas criadas:`);
    sampleProposals.forEach((p: any) => {
      console.log(`   ${p.activity_title}: ${p.title} - R$ ${p.amount}`);
    });

    console.log('\nüéâ Sistema de propostas de or√ßamento e avalia√ß√µes completamente implementado!');

  } catch (error) {
    console.error('‚ùå Erro:', error);
    throw error;
  }
}

// Executar se chamado diretamente
if (import.meta.url === `file://${process.argv[1]}`) {
  createBudgetProposals()
    .then(() => {
      console.log('‚úÖ Processo conclu√≠do!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Erro no processo:', error);
      process.exit(1);
    });
}